;;; -*- Mode: Lisp; Syntax: Common-Lisp; Package: AMBR-interface -*-

;;; FILE:       AMBR/intrface/defs.lsp
;;; VERSION:    2.2.2    ; see AMBR/VERSION.LSP
;;; PURPOSE:    Definitions of interface-related variables for AMBR2
;;; DEPENDS-ON: ambr/packages.lsp
;;; PROGRAMMER: Alexander Alexandrov Petrov  (apetrov@cogs.nbu.acad.bg)
;;; CREATED:    19-05-97
;;; UPDATED:    25-03-98 [2.2.1]
;;; UPDATED:    03-06-98 [2.2.2]
;;; UPDATED:    14-08-98 The 'official release'
;;; UPDATED:    ...


   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   ;;;;;;;;;    INTERFACE  DEFINITIONS  FOR   A M B R 2    ;;;;;;;;
   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(in-package  "AMBR-INTERFACE")

;;;; SYMBOLS: *target*, target-p ;
;;;;          *max-map-index*, *min-map-index*, *mapping-index-mode* ;
;;;;
;;;;          *A-LINK-GENKB-weight*, *INSTANCE-link-GENKB-pattern*,
;;;;          *GENKB-parameter-descriptors*,
;;;;          *expected-number-of-GENKB-templates*



;;;;;;  ***** Defining a hook for the target situation  *****
;;
;; The variable defined here is for implementational purposes only, as is
;; the class COALITION itself (see DUAL/INTRFACE/COALITN.LSP).
;; The model uses T-DRIVER-P and B-DRIVER-P from AMBR/GOALINPT.LSP.

(defvar *target* nil  "The target situation." )

(defun target-p (thing)
  "Is this the *TARGET* coalition or some agent thereof?"
  (declare (values boolean))
  (and (not (null *target*))
       (typecase thing
         (coalition  (equal  thing *target*))
         (AMBR-agent (member thing (coalition-members *target*)))
         (t  nil))
       T ))


;;;;  *****   Boundary values for the (linear) mapping index  *****
;;
;; See function RAW->INDEX-ACTIVATION in AMBR/INTRFACE/MAPPING.LSP.

(defparameter  *max-map-index*  2.0        ; should always be > 0.0
  "Boundary value for the positive branch of the mapping indices." )

(defparameter  *min-map-index*  -0.9999    ; should always be < 0.0
  "Boundary value for the negative branch of the mapping indices." )
  ;; -.999 is used instead of -1.000 to preserve one column in reports.

(defvar *mapping-index-mode*  :linear
  "Default value for the MODE parameter to the function MAPPING-INDEX." )



;;;;;;;;;  For file AMBR/INTRFACE/GENKB.LSP
;;

(defparameter *A-LINK-GENKB-weight*  0.2
  "The weight of the A-LINKs generated by GENERATE-KB. See fun GENKB->LINKS." )

(defparameter *INSTANCE-link-GENKB-pattern*
        '(0.4 0.3 0.3 0.2 0.1) ;; That is, five :INSTANCE links are created;
                               ;; The 1st with weight 0.5, the 2nd -- 0.4, etc
  "The pattern of :INSTANCE links generated by GENERATE-KB. See GENKB->LINKS." )
(defparameter *GENKB-parameter-descriptions*  '(
              "*A-LINK-GENKB-weight* = 0.2"
              "*INSTANCE-link-GENKB-pattern* = (0.4 0.3 0.3 0.2 0.1)"  )
  "A list of strings included in GENKB source files as comments." )

(defconstant *expected-number-of-GENKB-templates*  300
  "Expected number of (concept) agents having GENKB templates." )
 ;; This is merely a hint to the storage allocator. *GENKB-TABLE* is adjustable.


;;;;;;;  End of file AMBR/INTRFACE/DEFS.LSP
